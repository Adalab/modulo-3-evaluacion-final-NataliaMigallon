{"version":3,"sources":["images/Rick_and_Morty_logo.png","components/Header.js","services/Api.js","components/CharacterCard.js","components/CharacterList.js","components/CharacterDetail.js","components/FilterByName.js","components/FilterBySpecies.js","components/Reset.js","components/Filters.js","components/Footer.js","components/App.js","index.js"],"names":["Header","className","to","src","logo","alt","title","getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","image","species","origin","episode","status","CharacterCard","props","CharacterList","characterElements","characters","sort","a","b","searchResults","length","CharacterDetail","undefined","FilterByName","type","value","placeholder","onChange","ev","handleFilter","target","key","FilterBySpecies","htmlFor","Reset","sytle","onClick","handleReset","Filters","onSubmit","preventDefault","Footer","href","App","useState","setCharacters","nameFilter","setNameFilter","speciesFilter","setSpeciesFilter","useEffect","filteredCharacters","filter","toLowerCase","includes","exact","path","render","characterId","match","params","foundCharacter","find","parseInt","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0eebb5fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Rick_and_Morty_logo.de13d484.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../images/Rick_and_Morty_logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <div className=\"header__wrapper\">\r\n          <img\r\n            src={logo}\r\n            alt=\"Rick and Morty logo\"\r\n            title=\"Rick and Morty logo\"\r\n            className=\"header__wrapper--logo\"\r\n          />\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          image: character.image,\r\n          species: character.species,\r\n          origin: character.origin.name, //cómo se coge la localizacion\r\n          episode: character.episode,\r\n          status: character.status,\r\n          //coger más datos\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import PropTypes from \"prop-types\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <article className=\"char__card\">\r\n      <img\r\n        src={props.character.image}\r\n        alt={`Picture of ${props.character.name}`}\r\n        title={`Picture of ${props.character.name}`}\r\n        className=\"char__card--img\"\r\n      />\r\n      <h4 className=\"char__card--name\">{props.character.name}</h4>\r\n      <p className=\"char__card--species\">{props.character.species}</p>\r\n\r\n      <Link\r\n        className=\"char__card--info\"\r\n        to={`/character/${props.character.id}`}\r\n      >\r\n        About\r\n      </Link>\r\n    </article>\r\n  );\r\n};\r\n// CharacterCard.propTypes = { Me da warning en consola\r\n//   character: PropTypes.element.isRequired, //tengo dudas de si sería un object\r\n// };\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport CharacterCard from \"./CharacterCard\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterElements = props.characters\r\n    .sort((a, b) => {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      } else if (a.name < b.name) {\r\n        return -1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    })\r\n    .map((character) => {\r\n      return (\r\n        <li key={character.id}>\r\n          <CharacterCard\r\n            character={character}\r\n            // id={character.id}\r\n            // name={character.name}\r\n            // image={character.image}\r\n            // species={character.species}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n\r\n  const searchResults =\r\n    props.characters.length !== 0 ? (\r\n      <ul className=\"char__results--list\">{characterElements}</ul>\r\n    ) : (\r\n      <div className=\"no-matches\">\r\n        <p className=\"no-matches__text\">{`There is not a character that matches \"${props.name}\"`}</p>\r\n        <img\r\n          className=\"no-matches__gif\"\r\n          src=\"https://media.giphy.com/media/3o85xuO1siCT147FrG/giphy.gif\"\r\n        ></img>\r\n      </div>\r\n    );\r\n\r\n  return <section className=\"char__results\">{searchResults}</section>;\r\n};\r\nCharacterList.propTypes = {\r\n  characters: PropTypes.array.isRequired, //PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default CharacterList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const renderIconStatus = () => {\r\n    if (props.character.status === \"Alive\") {\r\n      return <i className=\" fas fa-heartbeat\"></i>;\r\n    } else if (props.character.status === \"Dead\") {\r\n      return <i className=\" fas fa-skull-crossbones\"></i>;\r\n    } else if (props.character.status === \"unknown\") {\r\n      return <i className=\" fas fa-question\"></i>;\r\n    }\r\n  };\r\n  if (props.character === undefined) {\r\n    return (\r\n      <div className=\"not-found\">\r\n        <p className=\"not-found__text\">Character not found</p>\r\n        <img\r\n          src=\"https://media.giphy.com/media/afqT2ykIlYcVi/giphy.gif\"\r\n          className=\"not-found__gif\"\r\n        ></img>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"detail\">\r\n        <section className=\"detail__section1\">\r\n          <header className=\"detail__section1--header\">\r\n            <Link to=\"/\">\r\n              <button className=\"detail__section1--header-return\">\r\n                Return\r\n              </button>\r\n            </Link>\r\n            <h2 className=\"detail__section1--header-title\">\r\n              {props.character.name}\r\n            </h2>\r\n          </header>\r\n          <main>\r\n            <div className=\"detail__section2\">\r\n              <img\r\n                className=\"detail__section2--img\"\r\n                src={props.character.image}\r\n                alt={`Picture of ${props.character.name}`}\r\n                title={`Picture of ${props.character.name}`}\r\n              ></img>\r\n              <ul className=\"detail__section2--list\">\r\n                <li className=\"detail__section2--item\">\r\n                  <p className=\"detail__section2--item1\">Species:</p>\r\n                  <p className=\"detail__section2--item2\">\r\n                    {props.character.species}\r\n                  </p>\r\n                </li>\r\n                <li className=\"detail__section2--item\">\r\n                  <p className=\"detail__section2--item1\">Planet:</p>\r\n                  <p className=\"detail__section2--item2\">\r\n                    {props.character.origin}\r\n                  </p>\r\n                </li>\r\n                <li className=\"detail__section2--item\">\r\n                  <p className=\"detail__section2--item1\">Episodes:</p>\r\n                  <p className=\"detail__section2--item2\">\r\n                    {props.character.episode.length}\r\n                  </p>\r\n                </li>\r\n                <li className=\"detail__section2--item\">\r\n                  <p className=\"detail__section2--item1\">Status:</p>\r\n                  <p className=\"detail__section2--item2\">\r\n                    {renderIconStatus()}\r\n                  </p>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </main>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default CharacterDetail;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterByName = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"wrapper__filterName\">\r\n      <label className=\"wrapper__filterName--title\">\r\n        Search the character:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          className=\"wrapper__filterName--input\"\r\n          value={props.name}\r\n          placeholder=\"ex. 'Morty...'\"\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\nFilterByName.propTypes = {\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\nexport default FilterByName;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FilterBySpecies = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"species\",\r\n    });\r\n    //console.log(\"species\", ev.target.value);\r\n  };\r\n  return (\r\n    <div className=\"wrapper__filterSpecies\">\r\n      <label htmlFor=\"species\" className=\"wrapper__filterSpecies--title\">\r\n        Species:\r\n        </label>\r\n        <select\r\n          name=\"species\"\r\n          id=\"species\"\r\n          className=\"wrapper__filterSpecies--select\"\r\n          value={props.value}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"All\">All</option>\r\n          <option value=\"Human\">Human</option>\r\n          <option value=\"Alien\">Alien</option>\r\n        </select>\r\n      \r\n    </div>\r\n  );\r\n};\r\nFilterBySpecies.propTypes = {\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\nexport default FilterBySpecies;\r\n","import React from \"react\";\r\n\r\nconst Reset = (props) => {\r\n  const handleResetClick = () => {\r\n    props.handleReset();\r\n  };\r\n  return (\r\n    <button\r\n      sytle=\"cursor:pointer\"\r\n      className=\"button\"\r\n      onClick={handleResetClick}\r\n    >\r\n      Reset\r\n    </button>\r\n  );\r\n};\r\nexport default Reset;\r\n","import React from \"react\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport FilterBySpecies from \"./FilterBySpecies\";\r\nimport Reset from \"./Reset\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filters = (props) => {\r\n  const preventDefault = (ev) => ev.preventDefault();\r\n  return (\r\n    <section className=\"filter__section\">\r\n      <form onSubmit={preventDefault} className=\"filter__section--form\">\r\n        <FilterByName handleFilter={props.handleFilter} name={props.name} />\r\n        <div className=\"wrapper_filter_reset\">\r\n          <FilterBySpecies\r\n            handleFilter={props.handleFilter}\r\n            value={props.value}\r\n          />\r\n          <Reset handleReset={props.handleReset} />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\nFilters.propTypes = {\r\n  handleFilter: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\nexport default Filters;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <small className=\"footer__small\">@2021 Natalia_Migallón</small>\r\n      <span className=\"footer__line\">|</span>\r\n      <p className=\"footer__github\">Visit my projects at</p>\r\n      <a\r\n        href=\"https://github.com/NataliaMigallon\"\r\n        title=\"Link to NataliaMigallón GitHub\"\r\n        target=\"_blank\"\r\n        className=\"github\"\r\n      >\r\n        <i className=\"fab fa-github\"></i>\r\n      </a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport getDataFromApi from \"../services/Api\";\nimport CharacterList from \"./CharacterList\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Filters from \"./Filters\";\nimport \"../stylesheets/App.scss\";\nimport Footer from \"./Footer\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [speciesFilter, setSpeciesFilter] = useState(\"All\");\n\n  useEffect(() => {\n    getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []); // con el array vacío solo se hace una llamada y evitamos un bucle\n\n  const handleFilter = (data) => {\n    if (data.key === \"name\") {\n      setNameFilter(data.value);\n    } else if (data.key === \"species\") {\n      setSpeciesFilter(data.value);\n    }\n  };\n\n  const filteredCharacters = characters\n    .filter((character) => {\n      return character.name.toLowerCase().includes(nameFilter.toLowerCase());\n    })\n    .filter((character) => {\n      // if (speciesFilter === \"all\") {\n      //   return true;\n      // } else {\n      //   console.log(\"holis\");\n      //   return character.species === speciesFilter;\n\n      // }\n      return speciesFilter === \"All\"\n        ? true\n        : character.species === speciesFilter;\n    });\n\n  const renderCharacterDetail = (props) => {\n    //console.log(props.match.params.characterId, characters);\n    const characterId = props.match.params.characterId;\n    const foundCharacter = characters.find((character) => {\n      return character.id === parseInt(characterId);\n    });\n    return <CharacterDetail character={foundCharacter} />;\n  };\n\n  const handleReset = () => {\n    setNameFilter(\"\");\n    setSpeciesFilter(\"All\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            handleFilter={handleFilter}\n            name={nameFilter}\n            handleReset={handleReset}\n            value={speciesFilter}\n          />\n          <CharacterList characters={filteredCharacters} name={nameFilter} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/App.scss\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}